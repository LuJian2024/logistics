import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import Navbar from "../components/Navbar";
import Footer from "../components/Footer";

import { NextIntlClientProvider } from "next-intl";
import { notFound } from "next/navigation";
// import { getMessages } from "next-intl/server";
import { getMessages } from "../../lib/getMessages";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//       //   className={`${geistSans.variable} ${geistMono.variable} antialiased bg-neutral-100 flex justify-center p-4`}
//       // >
//          className={`${geistSans.variable} ${geistMono.variable} `}>
//         {/* <div className="w-full max-w-7xl rounded-3xl overflow-hidden shadow-xl"> */}
//        <Navbar/> 
       
//         {children}
//         <Footer/>
//         {/* </div> */}
//       </body>
//     </html>
//   );
// }

export default async function LocaleLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: { locale: string };
}) {

  const { locale } = params;
  const messages = await getMessages({ locale });

  if (!messages) notFound();

  return (
    <html lang={locale}>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <NextIntlClientProvider messages={messages}>
          <Navbar />
          {children}
          <Footer />
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
